'''
Script to fix the broken GTFs generated by bambu
'''

import re
import sys

def fix_gtf_line(line):
    # Match the pattern in the malformed 'gene_id' field
    # Corrects lines like: gene_id "transcript_id SIRV101; SIRV1";
    match = re.search(r'gene_id "(transcript_id\s\S+;\s\S+)";', line)
    
    if match:
        # Extract the correct gene_id from the malformed string
        # Assuming that gene_id is the part after the semicolon
        parts = match.group(1).split('; ')
        correct_gene_id = parts[-1]
        
        # Replace the malformed gene_id with the correct one
        corrected_line = line.replace(match.group(1), correct_gene_id)
        return corrected_line
    else:
        return line

def fix_gtf_file(input_gtf, output_gtf):
    with open(input_gtf, 'r') as infile, open(output_gtf, 'w') as outfile:
        for line in infile:
            if line.startswith('#'):
                # Write header/comment lines unchanged
                outfile.write(line)
            elif 'unstranded' in line:
                # skip unstranded genes
                pass
            else:
                # Fix the malformed line if necessary
                fixed_line = fix_gtf_line(line)
                outfile.write(fixed_line)

if __name__ == "__main__":
    # Define input and output GTF file paths
    input_gtf = sys.argv[1]
    output_gtf = sys.argv[2]
    
    # Fix the GTF file
    fix_gtf_file(input_gtf, output_gtf)

    print(f"Fixed GTF file written to {output_gtf}")
